script:
Create table candidates(
id int primary key,
positions varchar(10) not null,
salary int not null);

test case 1:
insert into candidates values(1,'junior',5000);
insert into candidates values(2,'junior',7000);
insert into candidates values(3,'junior',7000);
insert into candidates values(4,'senior',10000);
insert into candidates values(5,'senior',30000);
insert into candidates values(6,'senior',20000);

test case 2:
insert into candidates values(20,'junior',10000);
insert into candidates values(30,'senior',15000);
insert into candidates values(40,'senior',30000);

test case 3:
insert into candidates values(1,'junior',15000);
insert into candidates values(2,'junior',15000);
insert into candidates values(3,'junior',20000);
insert into candidates values(4,'senior',60000);

test case 4:
insert into candidates values(10,'junior',10000);
insert into candidates values(40,'junior',10000);
insert into candidates values(20,'senior',15000);
insert into candidates values(30,'senior',30000);
insert into candidates values(50,'senior',15000);

with cte as(
select *, row_number() over(partition by positions order by salary) as rn
from candidates),
cte2 as(
select * ,
sum(salary) over(partition by positions order by rn) as sum_i
from cte
order by positions desc
),
cte3 as(
select * from cte2
where  sum_i<=50000 and positions='senior'),
cte4 as(

select * from cte2
where  positions='junior'
and sum_i<=50000-(select sum(salary) from cte3)),
cte5 as(

select * from cte3 
union all
select * from cte4)
select positions,count(*)
from cte5 
group by positions





 
















